// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  //Grabs the URL from the .env file
  url      = env("DATABASE_URL")
}

generator erd {
  // A package added to create ERD
  provider = "prisma-erd-generator"
  // Path for ERD - Change .png to other formats for
  output   = "../ERD/erd.png"
}

model User {
  id          String   @id @unique @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  email       String   @unique
  hash        String
  hashedRt    String?
  firstname   String?
  lastname    String?
  phonenumber String?
  isAdmin     Boolean

  bookings Booking[]
  purchase Purchase[]
  ticket   Ticket?
  @@map("users")
}

model Booking {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  bookedFor DateTime
  iLOQKey   String?
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  @@map("bookings")
}

model Purchase {
  id            String     @id @default(uuid())
  purchasedAt   DateTime   @default(now())
  typeOfTicket  String
  paymentMethod String
  userId        String
  user          User       @relation(fields: [userId], references: [id])
  ticketType    TicketType @relation(fields: [typeOfTicket], references: [typeOfTicket])

  @@map("purchases")
}

model Ticket {

  id            String @id @default(uuid())
  activeTickets Int
  usedTickets   Int
  userId        String @unique
  user          User   @relation(fields: [userId], references: [id])

  @@map("tickets")
}

model TicketType {

  id            String     @id @default(uuid())
  typeOfTicket  String     @unique
  nowPrice      Int
  normalPrice   Int
  ticketsAmount Int
  Purchase      Purchase[]

  @@map("ticketTypes")
}
